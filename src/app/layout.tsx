// // import type { Metadata } from "next";
// // import localFont from "next/font/local";
// // import "./globals.css";
// // import Header from "./components/Header";
// // import Navbar from "./components/Navbar";
// // import MainNavbar from "./components/MainNavbar";
// // import Footer from "./components/Footer";
// // import { GlobalProvider } from "./components/GlobleProvider";
// // import { CartProvider } from "./context/CartContaxt";
// // import {
// //   ClerkProvider,
// //   SignInButton,
// //   SignedIn,
// //   SignedOut,
// //   UserButton
// // } from '@clerk/nextjs'


// // const geistSans = localFont({
// //   src: "./fonts/GeistVF.woff",
// //   variable: "--font-geist-sans",
// //   weight: "100 900",
// // });
// // const geistMono = localFont({
// //   src: "./fonts/GeistMonoVF.woff",
// //   variable: "--font-geist-mono",
// //   weight: "100 900",
// // });

// // export const metadata: Metadata = {
// //   title: "Create Next App",
// //   description: "Generated by create next app",
// // };

// // export default function RootLayout({
// //   children,
// // }: Readonly<{
// //   children: React.ReactNode;
// // }>) {
// //   return (
// //     <ClerkProvider dynamic >
// //     <html lang="en">
// //       <body
// //         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
// //       >
       
// //        <CartProvider> 
// //        <Header />
// //         <Navbar />
// //         <MainNavbar />
// //         {children}
// //         <Footer />
       
// //        </CartProvider>
    
// //       </body>
// //     </html>
// //     </ClerkProvider>
// //   );
// // }


// import type { Metadata } from "next";
// import localFont from "next/font/local";
// import "./globals.css";
// import Header from "./components/Header";
// import Navbar from "./components/Navbar";
// import MainNavbar from "./components/MainNavbar";
// import Footer from "./components/Footer";
// import { GlobalProvider } from "./components/GlobleProvider";
// import { CartProvider } from "./context/CartContaxt";
// import { ClerkProvider } from "@clerk/nextjs";
// import React from "react";


// const geistSans = localFont({
//   src: "./fonts/GeistVF.woff",
//   variable: "--font-geist-sans",
//   weight: "100 900",
// });
// const geistMono = localFont({
//   src: "./fonts/GeistMonoVF.woff",
//   variable: "--font-geist-mono",
//   weight: "100 900",
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <React.StrictMode> <ClerkProvider
//     publishableKey={process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
//     >
//       <html lang="en">
//         <body
//           className={`${geistSans.variable} ${geistMono.variable} antialiased`}
//         >
//           <CartProvider>
//             <Header />
//             <Navbar />
//             <MainNavbar />
//             {children}
//             <Footer />
//           </CartProvider>
//         </body>
//       </html>
//     </ClerkProvider></React.StrictMode>
    
//   );
// }


import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import Header from "./components/Header";
import Navbar from "./components/Navbar";
import MainNavbar from "./components/MainNavbar";
import Footer from "./components/Footer";
import { GlobalProvider } from "./components/GlobleProvider";
import { CartProvider } from "./context/CartContaxt";
import { ClerkProvider } from "@clerk/nextjs";
import React from "react";


const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    // <ClerkProvider
    // publishableKey={process.env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
    // >
       <html lang="en">
        <body
          className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >
          <CartProvider>
            <Header />
            <Navbar />
            <MainNavbar />
            {children}
            <Footer />
          </CartProvider>
        </body>
      </html>
    // </ClerkProvider>
    
  );
}
